package com.meinHotel;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.*;

public class Room {
	private int id;
	private int floor;
	private int capacity;
	private String type;
	private String description;
	private double price;
	private List<String> reservedDates;
	
	public Room(int id, int floor, int capacity, String type, String description, double price) {
		super();
		this.id = id;
		this.floor = floor;
		this.capacity = capacity;
		this.type = type;
		this.description = description;
		this.price = price;
		reservedDates = new ArrayList<>();
	}
	
	public Room() {
		reservedDates = new ArrayList<>();
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public int getFloor() {
		return floor;
	}

	public void setFloor(int floor) {
		this.floor = floor;
	}

	public int getCapacity() {
		return capacity;
	}

	public void setCapacity(int capacity) {
		this.capacity = capacity;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public double getPrice() {
		return price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

//	public boolean isAvailable() {
//		return available;
//	}

//	public void setAvailable(boolean available) {
//		this.available = available;
//	}
	
	public void doReserve(LocalDate startDate, LocalDate finishDate) {
		DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
		
		// For loop for date format type
		for(LocalDate date = startDate; date.isBefore(finishDate); date.plusDays(1)){
			String formattedDate = date.format(formatter);
			reservedDates.add(formattedDate);
		}
	}
	
	
	public boolean isReserved(LocalDate startDate, LocalDate finishDate) {
		boolean isContain = false;
		DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
		
		// For loop for date format type
		for(LocalDate date = startDate; date.isBefore(finishDate); date.plusDays(1)){
			String formattedDate = date.format(formatter);
			if(reservedDates.contains(formattedDate)) {
				isContain = true;
				break;
			}
			
		}
		
		return isContain;
		
		
	}

	
	
	
}
